{{- if .Release.IsInstall -}}
{{- range $key, $validatorClient := .Values.validatorClients }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $validatorClient.name }}-copy-data"
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    helm.sh/chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3
  template:
    metadata:
      name: volume-migration
      labels:
        name: volume-migration
    spec:
      restartPolicy: Never
      containers:
        - name: volume-migration
          image: ubuntu:xenial
          tty: true
          command:
          - /bin/sh
          - -c
          - | 
            dirToCreate=$(dirname {{ $validatorClient.dataDirPath }})
            mkdir -p /mnt/new${dirToCreate} || true
            dirToCreate=$(dirname {{ $validatorClient.walletDirPath }})
            mkdir -p /mnt/new${dirToCreate} || true
            cp -r -v /mnt/old{{ $validatorClient.dataDirPath }} /mnt/new{{ $validatorClient.dataDirPath }}
            cp -r -v /mnt/old{{ $validatorClient.walletDirPath }} /mnt/new{{ $validatorClient.walletDirPath }}
          volumeMounts:
            - name: old-vol
              mountPath: /mnt/old
            - name: new-vol
              mountPath: /mnt/new
      volumes:
        - name: old-vol
          {{- toYaml $validatorClient.dataSource | nindent 10 }}
        - name: new-vol
          persistentVolumeClaim:
            claimName: {{ $validatorClient.name }}-pvc # change to data target pvc
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
{{- end -}}
{{- end -}}
